@import url("./fonts.css");

@tailwind base;

@layer base {
  :root {
    --background-color: theme("colors.neutral.50");
    --text-color: theme("colors.neutral.900");
  }
  @media (prefers-color-scheme: dark) {
    :root {
      --background-color: theme("colors.neutral.900");
      --text-color: theme("colors.neutral.100");
    }
  }

  /* Webkit shows a light blue background when tapping elements on touch
     devices. Looks janky. */
  html {
    -webkit-tap-highlight-color: transparent;
    scroll-behavior: smooth;
  }

  body {
    @apply bg-neutral-50 text-neutral-900 dark:bg-neutral-900 dark:text-neutral-100;
    /* Tailwind doesn't apply the normal font weight by default */
    @apply font-normal;
    /* Brave injects rules for body for sidebars, They override Tailwind's text size and font family. */
    @apply text-base font-sans;
  }

  * {
    /* We always want this, lines are too thick for our font by default. */
    @apply decoration-from-font;
  }

  /* Focus style is used in lots of places, and we want the same style for
     consistency, so seems worthwhile to do it once here. */
  *:focus {
    @apply outline-none;
  }
  *:focus-visible {
    @apply outline-none outline-dashed outline-offset-4 outline-logo-background rounded-md;
  }

  dialog {
    /* dialog has a white background by default, but we use it in a non-modal
       way, so don't want a background. */
    background: none;
  }

  /* Fully hide ScreenReader-only content when it's in an aria-hidden tree.
     By default it remains in its weird semi-visible state, which causes
     collapsed overflow:hidden areas to remain their full size. */
  [aria-hidden="true"] .sr-only,
  [aria-hidden="true"].sr-only {
    display: none;
  }

  /* Hackily-reset Chrome's autofill styles. Chrome sets a non-overridable
     background color on input elements, and screws with the text color.
     Changing color and background don't work. We can hack around by putting a
     box shadow over the background to hide the background color, and setting
     -webkit-text-fill-color works to change color. ðŸ’€ */
  /* https://css-tricks.com/snippets/css/change-autocomplete-styles-webkit-browsers/ */
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus {
    -webkit-text-fill-color: var(--text-color);
    -webkit-box-shadow: 0 0 0px 1000px var(--background-color) inset;
    caret-color: var(--text-color);
  }
}

@tailwind components;

@layer components {
  .bg-default {
    @apply bg-neutral-50 dark:bg-neutral-900;
  }
}

@tailwind utilities;

@layer utilities {
  .clip-circle {
    clip-path: circle(49%);
  }
  .clip-circle-44 {
    clip-path: circle(44%);
  }
  .clip-circle-40 {
    clip-path: circle(40%);
  }
  .clip-circle-37 {
    clip-path: circle(37%);
  }
  .animate-delay-800 {
    animation-delay: 800ms;
  }
  .clip-pairing-step-number {
    clip-path: xywh(0 0px 100% 86%);
  }

  .ring-none {
    /* tw uses two shadows for its rings, but doesn't provide a way to fully
       disable them both */
    --tw-ring-shadow: 0 0 transparent;
    --tw-ring-offset-shadow: 0 0 transparent;
  }

  .direction-reverse {
    animation-direction: reverse;
  }
  .direction-alternate-reverse {
    animation-direction: alternate-reverse;
  }
}
