name: ci

on:
  push:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.list_targets.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List targets
        id: list_targets
        uses: docker/bake-action/subaction/list-targets@v4
        with:
          target: tasks

  validate:
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Validate
        uses: docker/bake-action@v5
        with:
          targets: ${{ matrix.target }}
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max

  package:
    runs-on: ubuntu-latest
    needs:
      - validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get Git commit timestamps
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV

      - name: Build release packages
        uses: docker/bake-action@v5
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
        with:
          targets: packages

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package-files
          path: dist
